class MatrixIslands:
    def _init_(self, matrix):
        self.matrix = matrix
        self.visited = set()

    def count_islands(self):
        if not self.matrix:
            return 0

        count = 0
        for r in range(len(self.matrix)):
            for c in range(len(self.matrix[0])):
                if self.matrix[r][c] == 1 and (r, c) not in self.visited:
                    self.dfs(r, c)
                    count += 1
        return count

    def dfs(self, r, c):
        if (r < 0 or r >= len(self.matrix) or
                c < 0 or c >= len(self.matrix[0]) or
                self.matrix[r][c] == 0 or (r, c) in self.visited):
            return

        self.visited.add((r, c))
        for dr in [-1, 0, 1]:
            for dc in [-1, 0, 1]:
                self.dfs(r + dr, c + dc)

# Test case
matrix = [
    [1, 1, 0, 0, 0],
    [1, 0, 0, 1, 1],
    [0, 0, 1, 0, 0],
    [0, 1, 0, 1, 1],
    [1, 0, 0, 0, 0]
]

islands = MatrixIslands(matrix)
print(islands.count_islands())  # Output: Number of islands
